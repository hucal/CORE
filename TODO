comments!
    compiler schemes + state transitions + general goals...

    add warnings to Mk5 and below and to template instantiators

performances test cases
    tail call recursions, many arguments, complicated expressions...

global improvements
    implement incremental output using pipes

    modernize the code of the compilers, evaluators of gmachine Mk6 and TIM Mk n
        when done...

        more than just monadic errors, can the data structures be simplified?
        the code traversals?

    improve pretty printing code
        use an actual library

    unify statistics gathering
        steps, labelled steps ("supercombo reductions", Int)

        stack depth

        heap stats

    garbage collection

    lambda lifter!
        good annotation strategy?

complete template inst. machine

complete TIM

parallelize gmachine

gmachine
    add cond and print as primitives to mk6+

    how to print structured data?

    make code nice, add warnings to mk5 and below

    make a non-updating gmachine

    garbage collection plz
